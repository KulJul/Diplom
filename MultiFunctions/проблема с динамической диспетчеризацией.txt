Ќеобходимо передавать список типов при добавлении(в шаблое например <class... DerivedTpes>),
т.к. если передать информацию о типах в векторе(std::vector<type_info>& argumentsTypes) то так 
сделать не получаетс€: 	type_info type = (*argumentsTypes)[0];
				auto g = dynamic_cast<type>(keyVector);

ќднако передавать <class... DerivedTpes> нужно также с множественными аргументами в функции. 
Ќо чтобы их перебирать надо также передавать их количество и еще не совсем пон€тно как сдесь сделать приведение типов.


варианты:

1) посмотреть TypeInfo - класс из Lokki.
	-не нашел как его заюзать. ¬ этом он не дает преемуществ.

2) јлександреску пишет о возможных реализаци€х множественной диспетчеризации в 11.12 ѕерспективы стр.311.
“ам о том ка передавать множество типов.

	-насколько € вижу, он прделагает дл€ передачи списка типа использовать что-то типа TYPE_LIST3, 
но это не универсально, т.к. планируетс€ хранить произвольное множество параметров. ѕоэтому думаю использовать 
TypeCollection с рекурсией, как в первом варианте, там где Temp.cpp, MyMap.cpp.


3) –еализовать добавление функции "цепочкой", каждое звено добавл€ет один параметр Add().Add().Add()

4) –еализовать рекурсией по шаблонам , опера€сь на двойную диспетчеризацию. 
“.е. такими парами <Type, <Type, <Type, Type>>>